{"version":3,"sources":["media/images/Star_Wars_Logo.svg","utils/starBackground.js","components/Header/index.js","components/RadioButton/index.js","components/Sidebar/index.js","components/RightPanel/index.js","containers/Homepage/index.js","store/actions/HomepageActions.js","App.js","serviceWorker.js","store/reducers/HomepageReducer.js","index.js","store/reducers/index.js"],"names":["module","exports","__webpack_require__","p","Starfield","this","fps","canvas","width","height","minVelocity","maxVelocity","stars","intervalId","Star","x","y","size","velocity","prototype","initialise","div","self","containerDiv","window","innerWidth","innerHeight","addEventListener","event","draw","document","createElement","appendChild","start","i","Math","random","setInterval","update","stop","clearInterval","dt","length","star","ctx","getContext","fillStyle","fillRect","header","props","react_default","a","className","src","logo","alt","unselectedRadioSVG","viewBox","fill","xmlns","cx","cy","r","id","fillRule","clipRule","d","mask","selectedRadioSVG","radioButton","Fragment","big","odd","currentValue","value","text","undefined","concat","type","checked","name","onChange","content","lib_default","onYReachEnd","next","onFetchNext","sidebar","selectedType","planets","data","map","item","index","push","selectedItem","key","onClick","onChangeHandler","movies","title","typeList","components_RadioButton","target","getNextPlanets","getNextMovies","rightPanel","RightPanel_Planet","RightPanel_Movie","Planet","RightPanel_AddIcon","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","Movie","episode_id","opening_crawl","director","producer","release_date","AddIcon","Homepage","state","_this","setState","Object","defineProperty","console","log","prevProps","prevState","getPlanetList","getMovieList","components_Sidebar","components_RightPanel","React","Component","connect","home","dispatch","payload","axios","get","then","res","results","reset","catch","err","App","randomiseStars","starfield","starContainer","_this2","ref","elem","react_router_dom","components_Header","react_router","exact","path","render","containers_Homepage","from","to","Boolean","location","hostname","match","initialState","HomepageReducer","arguments","action","newPlanetList","newMovieList","slice","objectSpread","auth_token","store","createStore","combineReducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.294d7e23.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Star_Wars_Logo.34a0879a.svg\";","//\tDefine the starfield class.\r\nfunction Starfield() {\r\n  this.fps = 30;\r\n  this.canvas = null;\r\n  this.width = 0;\r\n  this.height = 0;\r\n  this.minVelocity = 15;\r\n  this.maxVelocity = 30;\r\n  this.stars = 100;\r\n  this.intervalId = 0;\r\n}\r\n\r\n//\tThe main function - initialises the starfield.\r\nStarfield.prototype.initialise = function(div) {\r\n  var self = this;\r\n\r\n  //\tStore the div.\r\n  this.containerDiv = div;\r\n  self.width = window.innerWidth;\r\n  self.height = window.innerHeight;\r\n\r\n  window.addEventListener(\"resize\", function resize(event) {\r\n    self.width = window.innerWidth;\r\n    self.height = window.innerHeight;\r\n    self.canvas.width = self.width;\r\n    self.canvas.height = self.height;\r\n    self.draw();\r\n  });\r\n\r\n  //\tCreate the canvas.\r\n  var canvas = document.createElement(\"canvas\");\r\n  div.appendChild(canvas);\r\n  this.canvas = canvas;\r\n  this.canvas.width = this.width;\r\n  this.canvas.height = this.height;\r\n};\r\n\r\nStarfield.prototype.start = function() {\r\n  //\tCreate the stars.\r\n  var stars = [];\r\n  for (var i = 0; i < this.stars; i++) {\r\n    stars[i] = new Star(\r\n      Math.random() * this.width,\r\n      Math.random() * this.height,\r\n      Math.random() * 3 + 1,\r\n      Math.random() * (this.maxVelocity - this.minVelocity) + this.minVelocity\r\n    );\r\n  }\r\n  this.stars = stars;\r\n\r\n  var self = this;\r\n  //\tStart the timer.\r\n  this.intervalId = setInterval(function() {\r\n    self.update();\r\n    self.draw();\r\n  }, 1000 / this.fps);\r\n};\r\n\r\nStarfield.prototype.stop = function() {\r\n  clearInterval(this.intervalId);\r\n};\r\n\r\nStarfield.prototype.update = function() {\r\n  var dt = 1 / this.fps;\r\n\r\n  for (var i = 0; i < this.stars.length; i++) {\r\n    var star = this.stars[i];\r\n    star.y += dt * star.velocity;\r\n    //\tIf the star has moved from the bottom of the screen, spawn it at the top.\r\n    if (star.y > this.height) {\r\n      this.stars[i] = new Star(\r\n        Math.random() * this.width,\r\n        0,\r\n        Math.random() * 3 + 1,\r\n        Math.random() * (this.maxVelocity - this.minVelocity) + this.minVelocity\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nStarfield.prototype.draw = function() {\r\n  //\tGet the drawing context.\r\n  var ctx = this.canvas.getContext(\"2d\");\r\n\r\n  //\tDraw the background.\r\n  ctx.fillStyle = \"#000000\";\r\n  ctx.fillRect(0, 0, this.width, this.height);\r\n\r\n  //\tDraw stars.\r\n  ctx.fillStyle = \"#ffffff\";\r\n  for (var i = 0; i < this.stars.length; i++) {\r\n    var star = this.stars[i];\r\n    ctx.fillRect(star.x, star.y, star.size, star.size);\r\n  }\r\n};\r\n\r\nfunction Star(x, y, size, velocity) {\r\n  this.x = x;\r\n  this.y = y;\r\n  this.size = size;\r\n  this.velocity = velocity;\r\n}\r\n\r\nexport default Starfield;\r\n","import React from \"react\";\r\n\r\nimport logo from \"../../media/images/Star_Wars_Logo.svg\";\r\n\r\nimport \"./Header.scss\";\r\n\r\nconst header = props => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header-logo\">\r\n        <img src={logo} alt=\"Logo\" />\r\n      </div>\r\n      <div className=\"header-navbar\">\r\n        <div className=\"navlink\">Home</div>\r\n        <div className=\"navlink\">My World</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default header;\r\n","import React from \"react\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\n\r\nimport \"./RadioButton.scss\";\r\n\r\nconst unselectedRadioSVG = (\r\n  <svg\r\n    width=\"12\"\r\n    height=\"12\"\r\n    viewBox=\"0 0 12 12\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <circle cx=\"6\" cy=\"6\" r=\"5\" fill=\"#373B4D\" />\r\n    <mask id=\"path-2-inside-1\" fill=\"white\">\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M6 10.5C3.51487 10.5 1.5 8.48512 1.5 6C1.5 3.51487 3.51487 1.5 6 1.5C8.48512 1.5 10.5 3.51487 10.5 6C10.5 8.48512 8.48512 10.5 6 10.5ZM6 0C2.68613 0 0 2.68613 0 6C0 9.31388 2.68613 12 6 12C9.31388 12 12 9.31388 12 6C12 2.68613 9.31388 0 6 0Z\"\r\n      />\r\n    </mask>\r\n    <path\r\n      d=\"M6 9.5C4.06716 9.5 2.5 7.93284 2.5 6H0.5C0.5 9.03741 2.96259 11.5 6 11.5V9.5ZM2.5 6C2.5 4.06716 4.06716 2.5 6 2.5V0.5C2.96259 0.5 0.5 2.96259 0.5 6H2.5ZM6 2.5C7.93284 2.5 9.5 4.06716 9.5 6H11.5C11.5 2.96259 9.03741 0.5 6 0.5V2.5ZM9.5 6C9.5 7.93284 7.93284 9.5 6 9.5V11.5C9.03741 11.5 11.5 9.03741 11.5 6H9.5ZM6 -1C2.13384 -1 -1 2.13384 -1 6H1C1 3.23841 3.23841 1 6 1V-1ZM-1 6C-1 9.86616 2.13384 13 6 13V11C3.23841 11 1 8.76159 1 6H-1ZM6 13C9.86616 13 13 9.86616 13 6H11C11 8.76159 8.76159 11 6 11V13ZM13 6C13 2.13384 9.86616 -1 6 -1V1C8.76159 1 11 3.23841 11 6H13Z\"\r\n      fill=\"#A3A5AD\"\r\n      mask=\"url(#path-2-inside-1)\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nconst selectedRadioSVG = (\r\n  <svg\r\n    width=\"12\"\r\n    height=\"12\"\r\n    viewBox=\"0 0 12 12\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M3.75 6C3.75 7.24237 4.75763 8.25 6 8.25C7.24237 8.25 8.25 7.24237 8.25 6C8.25 4.75763 7.24237 3.75 6 3.75C4.75763 3.75 3.75 4.75763 3.75 6ZM6 10.5C3.51487 10.5 1.5 8.48512 1.5 6C1.5 3.51487 3.51487 1.5 6 1.5C8.48512 1.5 10.5 3.51487 10.5 6C10.5 8.48512 8.48512 10.5 6 10.5ZM6 0C2.68613 0 0 2.68613 0 6C0 9.31388 2.68613 12 6 12C9.31388 12 12 9.31388 12 6C12 2.68613 9.31388 0 6 0Z\"\r\n      fill=\"#FFDA00\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nconst radioButton = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <label\r\n        className={\r\n          \"radioButtonContainer\" +\r\n          (props.big ? \" big\" : \"\") +\r\n          (props.odd ? \" odd\" : \"\")\r\n        }\r\n      >\r\n        {props.currentValue === props.value\r\n          ? selectedRadioSVG\r\n          : unselectedRadioSVG}\r\n        <span>\r\n          {props.text +\r\n            \" \" +\r\n            (props.length !== undefined ? `(${props.length})` : \"\")}\r\n        </span>\r\n        <input\r\n          type=\"radio\"\r\n          value={props.value}\r\n          checked={props.currentValue === props.value ? \"checked\" : \"\"}\r\n          name={props.name}\r\n          onChange={props.onChange}\r\n        />\r\n      </label>\r\n      {props.content && props.content.length ? (\r\n        <div className=\"radio-btn-container--scroll\">\r\n          <Scrollbar\r\n            onYReachEnd={() =>\r\n              props.next ? props.onFetchNext({ next: props.next }) : null\r\n            }\r\n          >\r\n            <div className=\"radio-btn-content\">{props.content}</div>\r\n          </Scrollbar>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default radioButton;\r\n","import React from \"react\";\r\n\r\nimport RadioBtn from \"../RadioButton\";\r\n\r\nimport \"./Sidebar.scss\";\r\n\r\nconst sidebar = props => {\r\n  let content = [];\r\n  if (props.selectedType === \"Planets\") {\r\n    props.planets.data.map((item, index) => {\r\n      content.push(\r\n        <div\r\n          className={\r\n            \"radio-btn-sublist\" +\r\n            (props.selectedItem.name === item.name\r\n              ? \" radio-btn-sublist--selected\"\r\n              : \"\")\r\n          }\r\n          key={\"planets\" + index}\r\n          onClick={() =>\r\n            item.name !== props.selectedItem.name\r\n              ? props.onChangeHandler(item, \"selectedItem\")\r\n              : null\r\n          }\r\n        >\r\n          {item.name}\r\n        </div>\r\n      );\r\n    });\r\n  } else if (props.selectedType === \"Movies\") {\r\n    props.movies.data.map((item, index) => {\r\n      content.push(\r\n        <div\r\n          className={\r\n            \"radio-btn-sublist\" +\r\n            (props.selectedItem.title === item.title\r\n              ? \" radio-btn-sublist--selected\"\r\n              : \"\")\r\n          }\r\n          key={\"movies\" + index}\r\n          onClick={() =>\r\n            item.title !== props.selectedItem.title\r\n              ? props.onChangeHandler(item, \"selectedItem\")\r\n              : null\r\n          }\r\n        >\r\n          {item.title}\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"sidebar\">\r\n      {props.typeList.map((item, index) => {\r\n        return (\r\n          <RadioBtn\r\n            key={\"typeList\" + index}\r\n            currentValue={props.selectedType}\r\n            name=\"typeList\"\r\n            value={item}\r\n            text={item}\r\n            onChange={event =>\r\n              props.onChangeHandler(event.target.value, \"selectedType\")\r\n            }\r\n            content={item === props.selectedType ? content : null}\r\n            onFetchNext={\r\n              item === \"Planets\" ? props.getNextPlanets : props.getNextMovies\r\n            }\r\n            next={item === \"Planets\" ? props.planets.next : props.movies.next}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default sidebar;\r\n","import React from \"react\";\r\nimport \"./RightPanel.scss\";\r\n\r\nconst rightPanel = props => {\r\n  return (\r\n    <div className=\"right-panel\">\r\n      {props.selectedType === \"Planets\" ? (\r\n        <Planet data={props.selectedItem} />\r\n      ) : (\r\n        <Movie data={props.selectedItem} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default rightPanel;\r\n\r\nconst Planet = props => {\r\n  return (\r\n    <div className=\"right-panel_content\">\r\n      <div className=\"panel-content-header\">\r\n        {props.data.name}\r\n        <button>\r\n          <AddIcon />\r\n          Add as Favourite\r\n        </button>\r\n      </div>\r\n      <p className=\"panel-content-data\">\r\n        <span>Rotation Period: </span>\r\n        {props.data.rotation_period}\r\n      </p>\r\n      <p className=\"panel-content-data\">\r\n        <span>Orbital Period: </span>\r\n        {props.data.orbital_period}\r\n      </p>\r\n      <p className=\"panel-content-data\">\r\n        <span>Diameter: </span>\r\n        {props.data.diameter}\r\n      </p>\r\n      <p className=\"panel-content-data\">\r\n        <span>Climate: </span>\r\n        {props.data.climate}\r\n      </p>\r\n      <p className=\"panel-content-data\">\r\n        <span>Gravity: </span>\r\n        {props.data.gravity}\r\n      </p>\r\n      <p className=\"panel-content-data\">\r\n        <span>Terrain: </span>\r\n        {props.data.terrain}\r\n      </p>\r\n      <p className=\"panel-content-data\">\r\n        <span>Surface Water: </span>\r\n        {props.data.surface_water}\r\n      </p>\r\n      <p className=\"panel-content-data\">\r\n        <span>Population: </span>\r\n        {props.data.population}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Movie = props => {\r\n  return (\r\n    <div className=\"right-panel_content\">\r\n      <div className=\"panel-content-header\">\r\n        {props.data.title}\r\n        <button>\r\n          <AddIcon />\r\n          Add as Favourite\r\n        </button>\r\n      </div>\r\n      <p className=\"panel-content-data\">\r\n        <span>Episode: </span>\r\n        {props.data.episode_id}\r\n      </p>\r\n      <p className=\"panel-content-data\">\r\n        <span>Story so far: </span>\r\n        {props.data.opening_crawl}\r\n      </p>\r\n      <p className=\"panel-content-data\">\r\n        <span>Director: </span>\r\n        {props.data.director}\r\n      </p>\r\n      <p className=\"panel-content-data\">\r\n        <span>Producer: </span>\r\n        {props.data.producer}\r\n      </p>\r\n      <p className=\"panel-content-data\">\r\n        <span>Release Date: </span>\r\n        {props.data.release_date}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddIcon = () => (\r\n  <svg\r\n    width=\"18\"\r\n    height=\"18\"\r\n    viewBox=\"0 0 25 26\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path d=\"M19.6786 13.6786C19.6786 14.245 19.2093 14.7143 18.6429 14.7143H14.5V18.8571C14.5 19.4235 14.0307 19.8929 13.4643 19.8929H11.3929C10.8265 19.8929 10.3571 19.4235 10.3571 18.8571V14.7143H6.21429C5.64788 14.7143 5.17857 14.245 5.17857 13.6786V11.6071C5.17857 11.0407 5.64788 10.5714 6.21429 10.5714H10.3571V6.42857C10.3571 5.86216 10.8265 5.39286 11.3929 5.39286H13.4643C14.0307 5.39286 14.5 5.86216 14.5 6.42857V10.5714H18.6429C19.2093 10.5714 19.6786 11.0407 19.6786 11.6071V13.6786ZM24.8571 12.6429C24.8571 5.78125 19.2902 0.214284 12.4286 0.214284C5.56696 0.214284 0 5.78125 0 12.6429C0 19.5045 5.56696 25.0714 12.4286 25.0714C19.2902 25.0714 24.8571 19.5045 24.8571 12.6429Z\" />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Sidebar from \"../../components/Sidebar\";\r\nimport RightPanel from \"../../components/RightPanel\";\r\n\r\nimport {\r\n  getPlanetList,\r\n  getMovieList\r\n} from \"../../store/actions/HomepageActions\";\r\n\r\nconst typeList = [\"Planets\", \"Movies\"];\r\n\r\nclass Homepage extends React.Component {\r\n  state = {\r\n    selectedType: \"\",\r\n    selectedItem: \"\"\r\n  };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.selectedType !== this.state.selectedType) {\r\n      if (this.state.selectedType === \"Planets\") this.props.getPlanetList({});\r\n      else if (this.state.selectedType === \"Movies\")\r\n        this.props.getMovieList({});\r\n      this.setState({ selectedItem: \"\" });\r\n    }\r\n  }\r\n  onChangeHandler = (value, name) => {\r\n    this.setState({ [name]: value });\r\n    console.log(name, value);\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Sidebar\r\n          onChangeHandler={this.onChangeHandler}\r\n          typeList={typeList}\r\n          selectedType={this.state.selectedType}\r\n          selectedItem={this.state.selectedItem}\r\n          planets={this.props.planets}\r\n          getNextPlanets={this.props.getPlanetList}\r\n          movies={this.props.movies}\r\n          getNextMovies={this.props.getMovieList}\r\n        />\r\n        {this.state.selectedType && this.state.selectedItem ? (\r\n          <RightPanel\r\n            selectedType={this.state.selectedType}\r\n            selectedItem={this.state.selectedItem}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    planets: state.home.planets,\r\n    movies: state.home.movies\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getPlanetList: payload => dispatch(getPlanetList(payload)),\r\n    getMovieList: payload => dispatch(getMovieList(payload))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Homepage);\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"https://swapi.co/api/\";\r\n\r\nexport const getPlanetList = payload => {\r\n  return dispatch => {\r\n    axios\r\n      .get(!payload.next ? `${baseUrl}planets/` : payload.next)\r\n      .then(res => {\r\n        res = res.data;\r\n        console.log(res);\r\n        dispatch({\r\n          type: \"GET_PLANET_LIST_SUCCESS\",\r\n          data: res.results,\r\n          next: res.next,\r\n          reset: !payload.next\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const getMovieList = payload => {\r\n  return dispatch => {\r\n    axios\r\n      .get(!payload.next ? `${baseUrl}films/` : payload.next)\r\n      .then(res => {\r\n        res = res.data;\r\n        console.log(res);\r\n        dispatch({\r\n          type: \"GET_MOVIE_LIST_SUCCESS\",\r\n          data: res.results,\r\n          next: res.next,\r\n          reset: !payload.next\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nimport Starfield from \"./utils/starBackground\";\n\nimport Header from \"./components/Header\";\nimport Homepage from \"./containers/Homepage\";\n\nimport \"./styles/normalize.scss\";\nimport \"./styles/base.scss\";\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.randomiseStars();\n  }\n  randomiseStars = () => {\n    var starfield = new Starfield();\n    starfield.initialise(this.starContainer);\n    starfield.stars = Math.random() * 100 + 50;\n    starfield.minVelocity = Math.random() * 30 + 5;\n    starfield.maxVelocity = Math.random() * 50 + starfield.minVelocity;\n    starfield.start();\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <div\n          className=\"starContainer\"\n          ref={elem => (this.starContainer = elem)}\n        />\n        <Router>\n          <React.Fragment>\n            <Header />\n            <div className=\"content\">\n              <Switch>\n                <Route\n                  exact\n                  path=\"/\"\n                  render={props => <Homepage {...props} />}\n                />\n                <Redirect from=\"/\" to=\"/\" />\n              </Switch>\n            </div>\n          </React.Fragment>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n  planets: { data: [], next: null },\r\n  movies: { data: [], next: null }\r\n};\r\n\r\nexport default (state = initialState, action = {}) => {\r\n  let newPlanetList = [];\r\n  let newMovieList = [];\r\n  switch (action.type) {\r\n    case \"GET_PLANET_LIST_SUCCESS\":\r\n      newPlanetList = state.planets.data.slice();\r\n      if (action.reset) newPlanetList = action.data.slice();\r\n      else newPlanetList = newPlanetList.concat(action.data);\r\n      return {\r\n        ...state,\r\n        planets: { data: newPlanetList, next: action.next }\r\n      };\r\n    case \"GET_MOVIE_LIST_SUCCESS\":\r\n      newMovieList = state.movies.data.slice();\r\n      if (action.reset) newMovieList = action.data.slice();\r\n      else newMovieList = newMovieList.concat(action.data);\r\n      return {\r\n        ...state,\r\n        movies: { data: newMovieList, next: action.next }\r\n      };\r\n    case \"LOGOUT_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        auth_token: \"\"\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport configureStore from \"./store/reducers\";\nimport { Provider } from \"react-redux\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport HomepageReducer from \"./HomepageReducer\";\r\n\r\nexport default () => {\r\n  return createStore(\r\n    combineReducers({\r\n      home: HomepageReducer\r\n    }),\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n  );\r\n};\r\n"],"sourceRoot":""}